###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.5-alpine as builder

# set work directory
WORKDIR /usr/src/app/django

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
# RUN pip install flake8
COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.prod.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/django/wheels -r requirements.prod.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.5-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
ENV STATIC_HOME=/home/app/web/staticfiles
ENV DJANGO_HOME=/home/app/web/django
RUN mkdir $APP_HOME
RUN mkdir $DJANGO_HOME
RUN mkdir $STATIC_HOME
WORKDIR $DJANGO_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/django/wheels /wheels
COPY --from=builder /usr/src/app/django/requirements.prod.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $DJANGO_HOME

# copy project
COPY . $DJANGO_HOME

# chown all the files to the app user
RUN chown -R app:app $DJANGO_HOME
RUN chown -R app:app $STATIC_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/django/entrypoint.prod.sh"]